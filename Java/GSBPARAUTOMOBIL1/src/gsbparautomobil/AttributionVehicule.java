/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gsbparautomobil;

import static com.sun.org.apache.xalan.internal.lib.ExsltDatetime.date;
import static com.sun.org.apache.xalan.internal.lib.ExsltDatetime.date;
import static java.lang.String.format;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.Format;
import java.util.Calendar;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author yanis
 */
public class AttributionVehicule extends javax.swing.JFrame {

    /**
     * Creates new form jFrameGSB3
     */


    
    
    
 JOptionPane jop1;

    /**
     *
     */
    public AttributionVehicule() 
    {

    initComponents();

    // Importation de fonction permetant la connexion à la bdd

            Statement st2 =null;

    try
    {
        st2 = Connexion.getInstance().createStatement();
    }

    catch(SQLException e){
    e.printStackTrace();}

        
//Remplissage du premier combo box avec la marque      

    try{
            // Affichage connexion reussie si l'interface peut se connecter à la bdd
            System.out.println("Connexion rÃ©ussie"); 
            String queryMarque = "SELECT * FROM marque"; // Selection du Libelle dans la bdd
            // Le resultSet contient le résultat de la requet SQL 
            // Execution de la requete avec la methode executeQuery()
            ResultSet rsMarque = st2.executeQuery(queryMarque);
            // Tant qu'on à des resultat
            while(rsMarque.next()) 
            { 
                // On recupere  le resultat de la requete ,
                // et on l'insert dans le combo box    
                jCmarque.addItem(rsMarque.getString("libellé"));
            } 
            
        }
            catch(Exception E) 
            {
                E.printStackTrace();
            }

    //Affichage de la date    
 
    String format = "dd/MM/yy H:mm:ss"; 

    java.text.SimpleDateFormat formater = new java.text.SimpleDateFormat(format); 

    java.util.Date date1 = new java.util.Date(); 

    String date2 = date1.toString();
    System.out.println(formater.format(date1)); 
    Date.setText(date2);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jRadioButtonMenuItem1 = new javax.swing.JRadioButtonMenuItem();
        buttonGroup1 = new javax.swing.ButtonGroup();
        Date = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jInternalFrame1 = new javax.swing.JInternalFrame();
        ok = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        nom = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jCmarque = new javax.swing.JComboBox();
        jCmodele = new javax.swing.JComboBox();
        jCimatriculation = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        dateR = new javax.swing.JTextField();
        nbJ = new javax.swing.JComboBox();
        jCalendar2 = new com.toedter.calendar.JDateChooser();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();

        jRadioButtonMenuItem1.setSelected(true);
        jRadioButtonMenuItem1.setText("jRadioButtonMenuItem1");

        Date.setText("        ");
        Date.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DateActionPerformed(evt);
            }
        });

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/1736572588_small.jpg"))); // NOI18N
        jLabel8.setText("jLabel8");
        jLabel8.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                jLabel8ComponentAdded(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jInternalFrame1.setBackground(new java.awt.Color(102, 204, 255));
        jInternalFrame1.setTitle("Attribution d'un vehicule à un visiteur");
        jInternalFrame1.setPreferredSize(new java.awt.Dimension(200, 400));
        jInternalFrame1.setVisible(true);
        jInternalFrame1.getContentPane().setLayout(null);

        ok.setText("Valider ");
        ok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okActionPerformed(evt);
            }
        });
        jInternalFrame1.getContentPane().add(ok);
        ok.setBounds(153, 235, 80, 23);

        jLabel1.setText("Nom du visiteur : ");
        jInternalFrame1.getContentPane().add(jLabel1);
        jLabel1.setBounds(0, 82, 84, 14);

        nom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nomActionPerformed(evt);
            }
        });
        jInternalFrame1.getContentPane().add(nom);
        nom.setBounds(120, 80, 101, 20);

        jLabel2.setText("Date d'emprunt :");
        jInternalFrame1.getContentPane().add(jLabel2);
        jLabel2.setBounds(0, 123, 84, 14);

        jLabel3.setText("Nombre Jours");
        jInternalFrame1.getContentPane().add(jLabel3);
        jLabel3.setBounds(0, 158, 66, 14);

        jCmarque.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCmarqueActionPerformed(evt);
            }
        });
        jInternalFrame1.getContentPane().add(jCmarque);
        jCmarque.setBounds(10, 40, 84, 20);

        jCmodele.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCmodeleActionPerformed(evt);
            }
        });
        jInternalFrame1.getContentPane().add(jCmodele);
        jCmodele.setBounds(110, 40, 101, 20);

        jCimatriculation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCimatriculationActionPerformed(evt);
            }
        });
        jInternalFrame1.getContentPane().add(jCimatriculation);
        jCimatriculation.setBounds(240, 40, 98, 20);

        jLabel4.setText("Marque");
        jInternalFrame1.getContentPane().add(jLabel4);
        jLabel4.setBounds(10, 20, 36, 14);

        jLabel5.setText("Modele");
        jInternalFrame1.getContentPane().add(jLabel5);
        jLabel5.setBounds(110, 20, 55, 14);

        jLabel6.setText("Imatriculation");
        jInternalFrame1.getContentPane().add(jLabel6);
        jLabel6.setBounds(240, 20, 65, 14);

        jLabel7.setText("Date retour");
        jInternalFrame1.getContentPane().add(jLabel7);
        jLabel7.setBounds(0, 203, 56, 14);

        dateR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dateRActionPerformed(evt);
            }
        });
        jInternalFrame1.getContentPane().add(dateR);
        dateR.setBounds(120, 200, 104, 20);

        nbJ.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "50" }));
        nbJ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nbJActionPerformed(evt);
            }
        });
        jInternalFrame1.getContentPane().add(nbJ);
        nbJ.setBounds(119, 155, 101, 20);
        jInternalFrame1.getContentPane().add(jCalendar2);
        jCalendar2.setBounds(120, 120, 87, 20);
        jInternalFrame1.getContentPane().add(jSeparator1);
        jSeparator1.setBounds(0, 70, 410, 10);
        jInternalFrame1.getContentPane().add(jSeparator2);
        jSeparator2.setBounds(0, 230, 50, 10);
        jInternalFrame1.getContentPane().add(jSeparator3);
        jSeparator3.setBounds(0, 222, 410, 10);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jInternalFrame1, javax.swing.GroupLayout.DEFAULT_SIZE, 425, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jInternalFrame1, javax.swing.GroupLayout.DEFAULT_SIZE, 307, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
  
    private void DateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DateActionPerformed

// TODO add your handling code here:
    }//GEN-LAST:event_DateActionPerformed

    private void nomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nomActionPerformed
   // TODO add your handling code here:
    }//GEN-LAST:event_nomActionPerformed

    private void okActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okActionPerformed

       
    Statement st2 =null;

    try
    {
        st2 = Connexion.getInstance().createStatement();
    }

    catch(SQLException e)
    {   
        e.printStackTrace();
    }        
        
    try
    { 
         // Recuperation du textfield "nom"
         String nom2 =  nom.getText(); 
         // Req qui recupere l'id à partir du nom
         String querNOM = "SELECT id  FROM visiteur WHERE nom = "+"'"+nom2+"'";  
         ResultSet rs2= st2.executeQuery(querNOM);
         // Type of : AC - 587 - AA 
         String im= jCimatriculation.getSelectedItem().toString();

         //TO GET DATE 
         String a= jCalendar2.getDate().toString();

     
    if(rs2.next())
    {

       String req;
       req = rs2.getString("id");
       String quer2NOM= "Insert INTO emprunte"
               + "(idVisiteur,Immatriculation,dateEmprunt)"
               + "VALUES ('"+req+"','"+im+"','"+a+"') "; // on insert l'id dans la bdd 


       System.out.print(quer2NOM);
       Statement st1 = Connexion.getInstance().createStatement();
       st1.executeUpdate(quer2NOM);

       // on insert l'id dans la bdd 
       String querDispo= "UPDATE vehicule SET disponibilité = '0' "
               + "WHERE Immatriculation ='"+im+"'" ; 

       Statement st3 = Connexion.getInstance().createStatement();
       st3.executeUpdate(querDispo); 
    }


    else 
    {   
        jop1= new JOptionPane();
        jop1.showMessageDialog(null,"NOM pas present dans la bdd"); 
    }
     }

catch(Exception e)
{
    e.printStackTrace();
    System.err.println ("Erreur de base de donnée insert : " + e );
}
        
        
        
        
// TODO add your handling code here:
    }//GEN-LAST:event_okActionPerformed

    private void jCmarqueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCmarqueActionPerformed
   
      
//Importation de la fct connexion   
        
    Statement st2 = null;
    try
    {
        st2 = Connexion.getInstance().createStatement();
    }
    catch(SQLException e)
    {
        e.printStackTrace();
    }
      
        
        
     try{        
        
            //On recupere la valeur du combo box et on la converti en chaine de carratere de la maniere suivante:
            // String nom = nomducombo.getSelectedItem().toString();
         
        
            String marqueSelec = jCmarque.getSelectedItem().toString(); 
            System.out.println("marqueSelec : " + marqueSelec);
            
            // On cherche l'id marque coresspondant à la marque choisi
            
            String queryIdMarque = 
                "SELECT idMarque FROM marque WHERE libellé = '"+marqueSelec+"' ";
            ResultSet rsIdMarque = st2.executeQuery(queryIdMarque);
            System.out.println("rsIdMarque : " + rsIdMarque);
            
            String idMarque = null;
            
            while(rsIdMarque.next()){
            idMarque = rsIdMarque.getString("idmarque");
            } 
            
            // Recuperation du result de la rqt  de la maniere suivante:
            // nom =nomrqt.GetString("nomvaleur");                                               
            System.out.println("idMarque : " + idMarque);
            
       
            
            //Conversion du resultat de la requete presedente en chaine
            String idString = rsIdMarque.toString();
            System.out.println("idString : " + idString);
            
            ResultSet rsModele = st2.executeQuery
                ("SELECT Modele FROM vehicule WHERE idMarque = '"+idMarque+"' ");
            System.out.println("rsModele : " + rsModele);
            
            jCmodele.removeAllItems(); // remise à vide du combo
            
            
            
            
            while(rsModele.next()) 
            {
                jCmodele.addItem(rsModele.getString("modele"));
            }
            rsModele.close();
            //FIN DE LA REQUETE POUR LE MODELE
            
            
            //Debut de la requete pour automatiser  l'immatriculation
    }
    
    catch(Exception e){
 
            e.printStackTrace();
    
            }
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jCmarqueActionPerformed

    private void jCmodeleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCmodeleActionPerformed
         
    Statement st2 = null;
    try
    {
        st2 = Connexion.getInstance().createStatement();
        jCimatriculation.removeAllItems();
    }
    catch(SQLException e)
    {
        e.printStackTrace();
    }
    
    try
    { 
        
        //String modelSelec = jCmodele.getSelectedItem().toString();
        // jcMarque.getSelectedItem récuprer du choix choisie 
        // et conversion en chaine de caractère 
        String queryIm ="Select Immatriculation FROM vehicule WHERE Modele = '"+
                jCmarque.getSelectedItem().toString() +"' ";  // string requete= "requete  
        
        System.out.print(queryIm);
        ResultSet rsIm = st2.executeQuery(queryIm); // resulte nom  = st2.execure(nomrequete)
        
        
           
     
    while (rsIm.next())
    { 
        jCimatriculation.addItem(rsIm.getString("Immatriculation"));       
    }   
           
   
     }
    
    catch(Exception e)
    {
       e.printStackTrace();
    
    }
    }//GEN-LAST:event_jCmodeleActionPerformed

    private void nbJActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nbJActionPerformed
    
    // Recuperation du combo box Sous forme de string
    String jour = nbJ.getSelectedItem().toString();
    // Conversion en entier
    int nbj = Integer.parseInt(jour);
    // Creation d'un type calendar
    Calendar cal  = Calendar.getInstance(); 
    // Convertion en String
    String cal2=cal.toString(); 
    // Fonction calcule date en fonction du jour recuperer
    cal.add(Calendar.DATE,nbj); 
    System.out.print("Cal = "+cal);
    int JJ =cal.get(Calendar.DAY_OF_MONTH);
    int MM =cal.get(Calendar.MONTH);
    int YYYY =cal.get(Calendar.YEAR);
    String dateRetour =((JJ+"/"+MM+1+"/"+YYYY));
    // On place la valeur  dans le textfield
    dateR.setText(dateRetour);
 // TODO add your handling code here:
    }//GEN-LAST:event_nbJActionPerformed

    private void jCimatriculationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCimatriculationActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCimatriculationActionPerformed

    private void dateRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dateRActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dateRActionPerformed

    private void jLabel8ComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_jLabel8ComponentAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel8ComponentAdded

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AttributionVehicule.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AttributionVehicule.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AttributionVehicule.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AttributionVehicule.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AttributionVehicule().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Date;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JTextField dateR;
    private com.toedter.calendar.JDateChooser jCalendar2;
    private javax.swing.JComboBox jCimatriculation;
    private javax.swing.JComboBox jCmarque;
    private javax.swing.JComboBox jCmodele;
    private javax.swing.JInternalFrame jInternalFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JComboBox nbJ;
    private javax.swing.JTextField nom;
    private javax.swing.JButton ok;
    // End of variables declaration//GEN-END:variables
}
